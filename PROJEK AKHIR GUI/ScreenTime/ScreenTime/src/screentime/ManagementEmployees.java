package screentime;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import screentime.Employee;

/**
 *
 * @author ASUS BLU11
 */
public class ManagementEmployees extends javax.swing.JFrame {
    private ArrayList<Employee> employees;
    private ProjectManagement pm;

    /**
     * Creates new form FramePegawai
     */
    public ManagementEmployees() {
        this.employees = new ArrayList<>();
        loadEmployeesFromFile();loadEmployeesFromFile();
        initComponents();
        updateTable();
    }

    private void loadEmployeesFromFile() {
        try (BufferedReader reader = new BufferedReader(new FileReader("employees.txt"))) {
            String line;
            boolean firstLine = true;
            while ((line = reader.readLine()) != null) {
                if (firstLine) {
                    firstLine = false;
                    continue; // Lewati header
                }
                String[] parts = line.split(",");
                if (parts.length == 4) {
                    int id = Integer.parseInt(parts[0].trim());
                    String name = parts[1].trim();
                    String position = parts[2].trim();
                    double salary = Double.parseDouble(parts[3].trim());
                    employees.add(new Employee(id, name, position, salary));
                }
            }
        } catch (IOException | NumberFormatException e) {
            employees = new ArrayList<>();
        }
    }
    
    private void updateTable() {
        DefaultTableModel model = (DefaultTableModel) TablePegawai.getModel();
        model.setRowCount(0); 
        if (employees != null) { 
            for (Employee employee : employees) {
                model.addRow(new Object[]{employee.getName(), employee.getId(), employee.getPosition(), employee.getSalary()});
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BtnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Salary = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Position = new javax.swing.JTextField();
        ButtonDelete = new javax.swing.JButton();
        ButtonSave = new javax.swing.JButton();
        ButtonAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablePegawai = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(684, 569));
        jPanel1.setLayout(null);

        BtnBack.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        BtnBack.setForeground(new java.awt.Color(102, 0, 153));
        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });
        jPanel1.add(BtnBack);
        BtnBack.setBounds(30, 30, 72, 31);

        jLabel1.setFont(new java.awt.Font("STSong", 1, 25)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MANAGEMENT EMPLOYEES");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(149, 14, 357, 53);

        jLabel2.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 255));
        jLabel2.setText("Name");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(89, 79, 167, 40);

        jLabel5.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 204, 255));
        jLabel5.setText("Salary");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(90, 240, 90, 30);
        jPanel1.add(Salary);
        Salary.setBounds(380, 250, 190, 30);

        Name.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });
        jPanel1.add(Name);
        Name.setBounds(380, 79, 193, 40);

        jLabel3.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 204, 255));
        jLabel3.setText("ID");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(89, 137, 167, 37);

        ID.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });
        jPanel1.add(ID);
        ID.setBounds(380, 137, 193, 37);

        jLabel4.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 204, 255));
        jLabel4.setText("Position");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(89, 192, 175, 37);

        Position.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        Position.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Position.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PositionActionPerformed(evt);
            }
        });
        jPanel1.add(Position);
        Position.setBounds(380, 192, 193, 37);

        ButtonDelete.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        ButtonDelete.setForeground(new java.awt.Color(153, 0, 204));
        ButtonDelete.setText("Delete");
        ButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(ButtonDelete);
        ButtonDelete.setBounds(280, 320, 100, 30);

        ButtonSave.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        ButtonSave.setForeground(new java.awt.Color(153, 0, 204));
        ButtonSave.setText("Save");
        ButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveActionPerformed(evt);
            }
        });
        jPanel1.add(ButtonSave);
        ButtonSave.setBounds(470, 320, 100, 30);

        ButtonAdd.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        ButtonAdd.setForeground(new java.awt.Color(153, 0, 204));
        ButtonAdd.setText("Add");
        ButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddActionPerformed(evt);
            }
        });
        jPanel1.add(ButtonAdd);
        ButtonAdd.setBounds(90, 320, 100, 31);

        TablePegawai.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        TablePegawai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Position", "Salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablePegawai);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 380, 600, 140);

        jLabel6.setForeground(new java.awt.Color(153, 0, 204));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/screentime/Desktop - 1.png"))); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, -2150, 690, 2740);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        if (Name.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Karyawan tidak boleh kosong!");
        }
    }//GEN-LAST:event_NameActionPerformed

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed
        try {
            int id = Integer.parseInt(ID.getText().trim());
            if (id <= 0) {
                JOptionPane.showMessageDialog(this, "ID harus berupa angka positif!");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Harap masukkan angka yang valid untuk ID!");
        }
    }//GEN-LAST:event_IDActionPerformed

    private void PositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PositionActionPerformed
        if (Position.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Posisi tidak boleh kosong!");
        }
    }//GEN-LAST:event_PositionActionPerformed

    private void ButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddActionPerformed
        String name = Name.getText().trim();
        String id = ID.getText().trim();
        String position = Position.getText().trim();
        String salary = Salary.getText().trim();

        if (name.isEmpty() || id.isEmpty() || position.isEmpty() || salary.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int idValue = Integer.parseInt(id);
            double salaryValue = Double.parseDouble(salary);
            if (salaryValue <= 0) {
                JOptionPane.showMessageDialog(this, "Gaji harus lebih dari 0!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                Salary.setText("");
                return;
            }

            Employee employee = new Employee(idValue, name, position, salaryValue);
            employees.add(employee);

            updateTable();
            saveEmployeesToFile();

            Name.setText("");
            ID.setText("");
            Position.setText("");
            Salary.setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID atau Gaji harus berupa angka!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            Salary.setText("");
        }    }//GEN-LAST:event_ButtonAddActionPerformed

    private void ButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteActionPerformed
        int selectedRow = TablePegawai.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih karyawan yang ingin dihapus!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus karyawan ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Hapus dari ArrayList employees
            employees.remove(selectedRow);

            // Perbarui tabel
            updateTable();

            // Simpan perubahan ke file
            saveEmployeesToFile();

            JOptionPane.showMessageDialog(this, "Karyawan berhasil dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_ButtonDeleteActionPerformed

    private void ButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveActionPerformed
        saveEmployeesToFile();
        JOptionPane.showMessageDialog(this, "Data karyawan berhasil disimpan ke employees.txt!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ButtonSaveActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        MainLayer mainLayer = new MainLayer(this, pm);
        mainLayer.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnBackActionPerformed
    
    private void saveEmployeesToFile() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("employees.txt"))) {
            writer.write("ID,Name,Position,Salary\n");
            for (Employee employee : employees) {
                writer.write(employee.getId() + "," + employee.getName() + "," + employee.getPosition() + "," + employee.getSalary() + "\n");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public ArrayList<Employee> getEmployees() {
        return employees;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(ManagementEmployees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton ButtonAdd;
    private javax.swing.JButton ButtonDelete;
    private javax.swing.JButton ButtonSave;
    private javax.swing.JTextField ID;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Position;
    private javax.swing.JTextField Salary;
    private javax.swing.JTable TablePegawai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}