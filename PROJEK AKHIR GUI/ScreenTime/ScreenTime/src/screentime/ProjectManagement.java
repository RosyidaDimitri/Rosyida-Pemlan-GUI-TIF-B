/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screentime;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.util.ArrayList;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS BLU11
 */
public class ProjectManagement extends javax.swing.JFrame {
   private ArrayList<Project> projects;
    /**
     * Creates new form Frame
     */
    public ProjectManagement() {
        projects = new ArrayList<>(); 
        initComponents();
        loadProjectsFromFile();
        updateTable();
    }
    
    private void loadProjectsFromFile() {
        try (BufferedReader reader = new BufferedReader(new FileReader("projects.txt"))) {
            String line;
            boolean firstLine = true;
            while ((line = reader.readLine()) != null) {
                if (firstLine) {
                    firstLine = false;
                    continue; // Lewati header
                }
                String[] parts = line.split(",");
                if (parts.length == 2) {
                    int id = Integer.parseInt(parts[0].trim());
                    String name = parts[1].trim();
                    projects.add(new Project(id, name));
                }
            }
        } catch (IOException | NumberFormatException e) {
            // File tidak ada atau kosong, abaikan
        }
    }
    
    private void updateTable() {
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        model.setRowCount(0); // Hapus semua baris
        for (Project project : projects) {
            model.addRow(new Object[]{project.getId(), project.getName()});
        }
        updateActiveProjectCount();
    }
    
    private void updateActiveProjectCount() {
        int activeCount = projects.size();
        jLabel5.setText("Active Projects: " + activeCount);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Back = new javax.swing.JButton();
        ProjectManagement = new javax.swing.JLabel();
        ID = new javax.swing.JLabel();
        ProjectID = new javax.swing.JTextField();
        Name = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ProjectName = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setPreferredSize(new java.awt.Dimension(684, 569));
        jPanel1.setLayout(null);

        Back.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        Back.setForeground(new java.awt.Color(102, 0, 153));
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        jPanel1.add(Back);
        Back.setBounds(20, 30, 72, 31);

        ProjectManagement.setFont(new java.awt.Font("STKaiti", 1, 25)); // NOI18N
        ProjectManagement.setForeground(new java.awt.Color(255, 255, 255));
        ProjectManagement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProjectManagement.setText("PROJECT MANAGEMENT");
        jPanel1.add(ProjectManagement);
        ProjectManagement.setBounds(186, 15, 308, 48);

        ID.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        ID.setForeground(new java.awt.Color(255, 204, 255));
        ID.setText("Project ID");
        jPanel1.add(ID);
        ID.setBounds(122, 81, 167, 39);

        ProjectID.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        ProjectID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ProjectID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProjectIDActionPerformed(evt);
            }
        });
        jPanel1.add(ProjectID);
        ProjectID.setBounds(381, 81, 193, 39);

        Name.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        Name.setForeground(new java.awt.Color(255, 204, 255));
        Name.setText("Project Name");
        jPanel1.add(Name);
        Name.setBounds(122, 139, 167, 37);

        jLabel5.setFont(new java.awt.Font("STSong", 1, 17)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 204, 255));
        jLabel5.setText("List Of Project");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(120, 330, 130, 23);

        ProjectName.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N
        ProjectName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ProjectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProjectNameActionPerformed(evt);
            }
        });
        jPanel1.add(ProjectName);
        ProjectName.setBounds(381, 138, 193, 38);

        Add.setFont(new java.awt.Font("STSong", 1, 17)); // NOI18N
        Add.setForeground(new java.awt.Color(102, 0, 153));
        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        jPanel1.add(Add);
        Add.setBounds(120, 270, 100, 30);

        Delete.setFont(new java.awt.Font("STSong", 1, 17)); // NOI18N
        Delete.setForeground(new java.awt.Color(102, 0, 153));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Delete);
        Delete.setBounds(290, 270, 100, 30);

        Save.setFont(new java.awt.Font("STSong", 1, 17)); // NOI18N
        Save.setForeground(new java.awt.Color(102, 0, 153));
        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        jPanel1.add(Save);
        Save.setBounds(470, 270, 100, 30);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setEnabled(false);
        jScrollPane1.setFont(new java.awt.Font("STSong", 1, 18)); // NOI18N

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 380, 620, 170);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/screentime/Desktop - 1.png"))); // NOI18N
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, -2250, 690, 2820);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProjectIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProjectIDActionPerformed
        if (ProjectID.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID proyek tidak boleh kosong!");
            ProjectID.requestFocus();
        }
    }//GEN-LAST:event_ProjectIDActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        String projectName = ProjectName.getText().trim();
        String projectId = ProjectID.getText().trim();

        if (projectName.isEmpty() || projectId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int id = Integer.parseInt(projectId);
            if (id <= 0) {
                JOptionPane.showMessageDialog(this, "ID proyek harus berupa angka positif!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                ProjectID.setText("");
                return;
            }

            Project project = new Project(id, projectName);
            projects.add(project);

            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            model.addRow(new Object[]{id, projectName}); // Sesuaikan urutan dengan header tabel: ID, Name

            updateActiveProjectCount();
            saveProjectsToFile();

            ProjectID.setText("");
            ProjectName.setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID proyek harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
            ProjectID.setText("");
        }
    }//GEN-LAST:event_AddActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        int selectedRow = Table.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih proyek yang akan dihapus!");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus proyek ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            projects.remove(selectedRow);
            updateTable();
            saveProjectsToFile();
            JOptionPane.showMessageDialog(this, "Proyek berhasil dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        try {
                saveProjectsToFile();
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan ke projects.txt", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        private void saveProjectsToFile() {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter("projects.txt"))) {
                writer.write("ID,Name\n");
                for (Project project : projects) {
                    writer.write(project.getId() + "," + project.getName() + "\n");
                }
            } catch (IOException e) {
                throw new RuntimeException("Gagal menyimpan ke projects.txt: " + e.getMessage());
            }
    }//GEN-LAST:event_SaveActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        MainLayer mainLayer = new MainLayer();
        mainLayer.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackActionPerformed

    private void ProjectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProjectNameActionPerformed
        if (ProjectName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama proyek tidak boleh kosong!");
            ProjectName.requestFocus();
        }
    }//GEN-LAST:event_ProjectNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjectManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjectManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjectManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjectManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ProjectManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Back;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel ID;
    private javax.swing.JLabel Name;
    private javax.swing.JTextField ProjectID;
    private javax.swing.JLabel ProjectManagement;
    private javax.swing.JTextField ProjectName;
    private javax.swing.JButton Save;
    private javax.swing.JTable Table;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

        public ArrayList<Project> getProjects() {
        return projects;
    }
}